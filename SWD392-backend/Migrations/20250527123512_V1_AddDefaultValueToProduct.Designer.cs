// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SWD392_backend.Context;

#nullable disable

namespace SWD392_backend.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250527123512_V1_AddDefaultValueToProduct")]
    partial class V1_AddDefaultValueToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "order_status", new[] { "pending", "preparing", "delivery", "delivered", "returned", "cancelled", "refunding", "refunded" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("product_images_seq");

            modelBuilder.HasSequence("products_id_seq");

            modelBuilder.HasSequence("products_images_seq");

            modelBuilder.Entity("SWD392_backend.Entities.category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id")
                        .HasName("categories_pkey");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("SWD392_backend.Entities.order", b =>
                {
                    b.Property<Guid>("id")
                        .HasColumnType("uuid");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("deliveried_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("paid_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("shipping_price")
                        .HasColumnType("double precision");

                    b.Property<int>("supplier_id")
                        .HasColumnType("integer");

                    b.Property<double>("total")
                        .HasColumnType("double precision");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("orders_pkey");

                    b.HasIndex("supplier_id");

                    b.HasIndex("user_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("SWD392_backend.Entities.orders_detail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<double>("discount_percent")
                        .HasColumnType("double precision");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("order_id")
                        .HasColumnType("uuid");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<int>("product_attribute_id")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("orders_detail_pkey");

                    b.HasIndex("order_id");

                    b.HasIndex("product_attribute_id");

                    b.ToTable("orders_detail");
                });

            modelBuilder.Entity("SWD392_backend.Entities.product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("available_quantity")
                        .HasColumnType("integer");

                    b.Property<int>("categories_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("discount_percent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double precision")
                        .HasDefaultValue(0.0);

                    b.Property<double>("discount_price")
                        .HasColumnType("double precision");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_sale")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<double>("rating_average")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double precision")
                        .HasDefaultValue(0.0);

                    b.Property<string>("sku")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("sold_quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("stock_in_quantity")
                        .HasColumnType("integer");

                    b.Property<int>("supplier_id")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("products_pkey");

                    b.HasIndex("categories_id");

                    b.HasIndex("supplier_id");

                    b.HasIndex(new[] { "name" }, "products_name_index");

                    b.ToTable("products");
                });

            modelBuilder.Entity("SWD392_backend.Entities.product_attribute", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("product_attribute_pkey");

                    b.HasIndex("product_id");

                    b.ToTable("product_attribute");
                });

            modelBuilder.Entity("SWD392_backend.Entities.product_image", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("product_image_url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("products_id")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("product_images_pkey");

                    b.HasIndex("products_id");

                    b.ToTable("product_images");
                });

            modelBuilder.Entity("SWD392_backend.Entities.product_review", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("rating")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("product_reviews_pkey");

                    b.HasIndex("product_id");

                    b.HasIndex("user_id");

                    b.ToTable("product_reviews");
                });

            modelBuilder.Entity("SWD392_backend.Entities.supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("is_verified")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("registered_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("suppliers_pkey");

                    b.HasIndex("user_id");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("SWD392_backend.Entities.user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("image_url")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id")
                        .HasName("users_pkey");

                    b.HasIndex(new[] { "email" }, "users_email_key")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("SWD392_backend.Entities.order", b =>
                {
                    b.HasOne("SWD392_backend.Entities.supplier", "supplier")
                        .WithMany("orders")
                        .HasForeignKey("supplier_id")
                        .IsRequired()
                        .HasConstraintName("fk_orders_supplier");

                    b.HasOne("SWD392_backend.Entities.user", "user")
                        .WithMany("orders")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("fk_orders_user");

                    b.Navigation("supplier");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SWD392_backend.Entities.orders_detail", b =>
                {
                    b.HasOne("SWD392_backend.Entities.order", "order")
                        .WithMany("orders_details")
                        .HasForeignKey("order_id")
                        .IsRequired()
                        .HasConstraintName("fk_orders_detail_order");

                    b.HasOne("SWD392_backend.Entities.product_attribute", "product_attribute")
                        .WithMany("orders_details")
                        .HasForeignKey("product_attribute_id")
                        .IsRequired()
                        .HasConstraintName("fk_orders_detail_product");

                    b.Navigation("order");

                    b.Navigation("product_attribute");
                });

            modelBuilder.Entity("SWD392_backend.Entities.product", b =>
                {
                    b.HasOne("SWD392_backend.Entities.category", "categories")
                        .WithMany("products")
                        .HasForeignKey("categories_id")
                        .IsRequired()
                        .HasConstraintName("fk_products_categories");

                    b.HasOne("SWD392_backend.Entities.supplier", "supplier")
                        .WithMany("products")
                        .HasForeignKey("supplier_id")
                        .IsRequired()
                        .HasConstraintName("fk_products_suppliers");

                    b.Navigation("categories");

                    b.Navigation("supplier");
                });

            modelBuilder.Entity("SWD392_backend.Entities.product_attribute", b =>
                {
                    b.HasOne("SWD392_backend.Entities.product", "product")
                        .WithMany("product_attributes")
                        .HasForeignKey("product_id")
                        .IsRequired()
                        .HasConstraintName("fk_product_attribute_product");

                    b.Navigation("product");
                });

            modelBuilder.Entity("SWD392_backend.Entities.product_image", b =>
                {
                    b.HasOne("SWD392_backend.Entities.product", "products")
                        .WithMany("product_images")
                        .HasForeignKey("products_id")
                        .IsRequired()
                        .HasConstraintName("fk_product_images_products");

                    b.Navigation("products");
                });

            modelBuilder.Entity("SWD392_backend.Entities.product_review", b =>
                {
                    b.HasOne("SWD392_backend.Entities.product", "product")
                        .WithMany("product_reviews")
                        .HasForeignKey("product_id")
                        .IsRequired()
                        .HasConstraintName("fk_product_reviews_product");

                    b.HasOne("SWD392_backend.Entities.user", "user")
                        .WithMany("product_reviews")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("fk_product_reviews_user");

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SWD392_backend.Entities.supplier", b =>
                {
                    b.HasOne("SWD392_backend.Entities.user", "user")
                        .WithMany("suppliers")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("fk_suppliers_user");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SWD392_backend.Entities.category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("SWD392_backend.Entities.order", b =>
                {
                    b.Navigation("orders_details");
                });

            modelBuilder.Entity("SWD392_backend.Entities.product", b =>
                {
                    b.Navigation("product_attributes");

                    b.Navigation("product_images");

                    b.Navigation("product_reviews");
                });

            modelBuilder.Entity("SWD392_backend.Entities.product_attribute", b =>
                {
                    b.Navigation("orders_details");
                });

            modelBuilder.Entity("SWD392_backend.Entities.supplier", b =>
                {
                    b.Navigation("orders");

                    b.Navigation("products");
                });

            modelBuilder.Entity("SWD392_backend.Entities.user", b =>
                {
                    b.Navigation("orders");

                    b.Navigation("product_reviews");

                    b.Navigation("suppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
